process OFFLINEHISTORIC= {
  #keep the logging output to a nice level
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  # related to input file size
  service = AdaptorConfig {}

  # magnetic field
  include "Geometry/CMSCommonData/data/cmsMagneticFieldXML.cfi"
  include "MagneticField/Engine/data/uniformMagneticField.cfi"
  replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
  es_prefer = UniformMagneticFieldESProducer{}

  # tracker geometry
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
 
  # tracker numbering
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
 
  # cms geometry
  include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

############# DQM
  include "DQM/SiStripHistoricInfoClient/data/tif.cfi"
//  replace PoolSource.maxEvents = 11

  # DQM services
  service = DaqMonitorROOTBackEnd{}

  # tracer service - very verbose - useful for debugging only
#  service = Tracer { untracked string indention = "$$"}

#  # SiStripMonitorDigi
#  include "DQM/SiStripMonitorDigi/data/SiStripMonitorDigi_RealData.cfi"
#  # use the following flag to select all detectors (e.g. for mtcc data). by default is false
#  replace SiStripMonitorDigi.SelectAllDetectors = false

  # SiStripMonitorCluster
  include "DQM/SiStripMonitorCluster/data/SiStripMonitorCluster.cfi"
  # use the following flag to select all detectors (e.g. for mtcc data). by default is false
  replace SiStripMonitorCluster.OutputMEsInRootFile = false
  replace SiStripMonitorCluster.UseCalibDataFromDB = false # this is for the noise service
  replace SiStripMonitorCluster.SelectAllDetectors = true

  # the client
  module historicOfflineClient = HistoricOfflineClient{
    untracked bool debug = true
    untracked string outputFile = "hclient.root"
    untracked bool writeHisto = true
  }


######################## Access to ORCOFF via Frontier
  es_source = PoolDBESSource {
    VPSet toGet = {
#      { string record = "SiStripPedestalsRcd" string tag = "SiStripPedNoise_TIBTOB_v1_p"},
#      { string record = "SiStripNoisesRcd" string tag = "SiStripPedNoise_TIBTOB_v1_n"},
      { string record = "SiStripFedCablingRcd" string tag = "SiStripCabling_TIBTOB_v1"}
    }
   
    string connect = "frontier://cms_conditions_data/CMS_COND_STRIP"
    string timetype = "runnumber"
    untracked string BlobStreamerName="DefaultBlobStreamingService"
    PSet DBParameters ={
      untracked string authenticationPath = ""
    }
  }

  es_module sistripconn = SiStripConnectivity {}

  service = LockService {
    untracked vstring labels = { "source" }
  }

  service = PoolDBOutputService{
    string connect = "sqlite_file:historic.db"
#    untracked string BlobStreamerName="DefaultBlobStreamingService"
    string timetype = "runnumber"
    PSet DBParameters = {
      untracked string authenticationPath="/afs/cern.ch/cms/DB/conddb"
      untracked int32 messageLevel=2
    }
    VPSet toPut={ { string record = "SiStripPerformanceSummaryRcd"   string tag ="SiStripPerformanceSummaryRcd_v1"} }
  }

/*
  service = PoolDBOutputService{
    string connect = "oracle://devdb10/CMS_TRACKER_GBRUNO"
#    untracked string BlobStreamerName="DefaultBlobStreamingService"
    string timetype = "runnumber"
    PSet DBParameters = {
      untracked string authenticationPath="/afs/cern.ch/user/d/dkcira/analysis/2007_04_30_historicobject/CMSSW_1_3_0/src/DQM/SiStripHistoricInfoClient/test"
      untracked int32 messageLevel=2
    }
    VPSet toPut={ { string record = "SiStripPerformanceSummaryRcd"   string tag ="SiStripPerformanceSummaryRcd_v1"} }
  }
*/

########################
  # track reco for TIFTIBTOB
  #include "RecoTracker/Configuration/data/RecoTrackerTIFTIBTOB.cff"
 
  # cosmic track finder seeding
  include "RecoTracker/TkSeedGenerator/data/CosmicSeedTIFTIBTOB.cff"

  # cosmic track finder pattern recognition and track fit
  include "RecoTracker/SingleTrackPattern/data/CosmicTrackFinderTIFTIBTOB.cff"

  # Seeds 
  include "RecoTracker/SpecialSeedGenerators/data/CombinatorialSeedGeneratorForCosmicsTIFTIBTOB.cff"

  # Ckf
  include "RecoTracker/CkfPattern/data/CkfTrackCandidatesTIFTIBTOB.cff"

  # Final Fit
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterialTIFTIBTOB.cff"

  # RoadSearchSeedFinder
  include "RecoTracker/RoadSearchSeedFinder/data/RoadSearchSeedsTIFTIBTOB.cff"

  # RoadSearchCloudMaker
  include "RecoTracker/RoadSearchCloudMaker/data/RoadSearchCloudsTIFTIBTOB.cff"

  # RoadSearchTrackCandidateMaker
  include "RecoTracker/RoadSearchTrackCandidateMaker/data/RoadSearchTrackCandidatesTIFTIBTOB.cff"

  # RS track fit with material 
  include "RecoTracker/TrackProducer/data/RSFinalFitWithMaterialTIFTIBTOB.cff"

  # include track info
  #include "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducerTIFTIBTOB.cff"
  replace rsWithMaterialTracksTIFTIBTOB.TrajectoryInEvent = true
  replace ctfWithMaterialTracksTIFTIBTOB.TrajectoryInEvent = true
  replace cosmictrackfinderTIFTIBTOB.TrajInEvents = true

  module  trackinfoRSTIFTIBTOB = trackinfo from "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"
  replace trackinfoRSTIFTIBTOB.cosmicTracks  = rsWithMaterialTracksTIFTIBTOB
  replace trackinfoRSTIFTIBTOB.rechits  = rsWithMaterialTracksTIFTIBTOB

  module  trackinfoCTFTIFTIBTOB = trackinfo from "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"
  replace trackinfoCTFTIFTIBTOB.cosmicTracks  = ctfWithMaterialTracksTIFTIBTOB
  replace trackinfoCTFTIFTIBTOB.rechits  = ctfWithMaterialTracksTIFTIBTOB

  module  trackinfoCosmicTFTIFTIBTOB = trackinfo from "AnalysisAlgos/TrackInfoProducer/data/TrackInfoProducer.cfi"
  replace trackinfoCosmicTFTIFTIBTOB.cosmicTracks  = cosmictrackfinderTIFTIBTOB
  replace trackinfoCosmicTFTIFTIBTOB.rechits  = cosmictrackfinderTIFTIBTOB

  sequence trackinfoTIFTIBTOB = {trackinfoRSTIFTIBTOB,trackinfoCTFTIFTIBTOB,trackinfoCosmicTFTIFTIBTOB}

  sequence ckftracksTIFTIBTOB = {combinatorialcosmicseedfinderTIFTIBTOB, ckfTrackCandidatesTIFTIBTOB,ctfWithMaterialTracksTIFTIBTOB}              
  sequence rstracksTIFTIBTOB  = {roadSearchSeedsTIFTIBTOB, roadSearchCloudsTIFTIBTOB, rsTrackCandidatesTIFTIBTOB, rsWithMaterialTracksTIFTIBTOB}
  sequence cosmictracksTIFTIBTOB = {cosmicseedfinderTIFTIBTOB, cosmictrackfinderTIFTIBTOB}

  sequence tracksTIFTIBTOB = {cosmictracksTIFTIBTOB, ckftracksTIFTIBTOB, rstracksTIFTIBTOB, trackinfoTIFTIBTOB}

######################## Scheduling
#  path p = {tracksTIFTIBTOB,SiStripMonitorDigi,SiStripMonitorCluster,historicOfflineClient}
  path p = {SiStripMonitorCluster,historicOfflineClient}

}
